apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  name: cartservice-pod-network-latency2
  namespace: team-4
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: team-4
  entrypoint: cartservice-pod-network-latency
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsGroup: 0
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: cartservice-pod-network-latency
    outputs: {}
    steps:
    - - arguments: {}
        name: pod-memory-hog-ysh
        template: pod-memory-hog-ysh
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: docker.io/harness/chaos-go-runner:1.39.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-memory-hog-ysh.yaml
      - -saveName=/tmp/engine-name
      command:
      - ./chaos-checker
      image: docker.io/harness/chaos-go-runner:1.39.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-memory-hog-ysh
        path: /tmp/chaosengine-pod-memory-hog-ysh.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                name: pod-memory-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: experiment-job
                app.kubernetes.io/runtime-api-usage: "true"
                app.kubernetes.io/version: ci
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: cartservice-pod-network-latency
              annotations:
                probeRef: '[{"probeID":"boutique-website-latency-check","mode":"Continuous"}]'
              generateName: pod-memory-hog-ysh
            spec:
              engineState: active
              terminationGracePeriodSeconds: 30
              appinfo:
                appns: team-4
                applabel: app=shippingservice
                appkind: deployment
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-memory-hog
                  image: docker.io/harness/chaos-go-runner:1.39.0
                  imagePullPolicy: Always
                  args:
                    - -c
                    - ./experiments -name pod-memory-hog
                  command:
                    - /bin/bash
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: MEMORY_CONSUMPTION
                          value: "500"
                        - name: NUMBER_OF_WORKERS
                          value: "1"
                        - name: PODS_AFFECTED_PERC
                          value: "100"
                        - name: RAMP_TIME
                          value: ""
                        - name: LIB_IMAGE
                          value: docker.io/harness/chaos-go-runner:1.39.0
                        - name: STRESS_IMAGE
                          value: alexeiled/stress-ng:latest-ubuntu
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                        - name: SEQUENCE
                          value: parallel
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: NODE_LABEL
                          value: ""
                      securityContext:
                        podSecurityContext:
                          runAsUser: 2000
                          runAsGroup: 0
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 180s
                          retry: 0
                          interval: 1s
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: ./healthcheck -name pod-level
                          source:
                            image: docker.io/harness/chaos-go-runner:1.39.0
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
              jobCleanUpPolicy: delete
    metadata:
      labels:
        weight: "10"
    name: pod-memory-hog-ysh
    outputs: {}
status:
  finishedAt: null
  startedAt: null
